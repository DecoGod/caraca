body {
    font-family: 'Arial', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #f4f4f4;
    margin: 0;
    color: #333;
    min-width: min-content;
}

h1 {
    color: #007bff;
    margin-bottom: 20px;
}

.game-container {
    display: grid;
    /* Ajuste o grid para 5 colunas x 4 linhas para 20 cartas */
    grid-template-columns: repeat(5, 150px);
    grid-template-rows: repeat(4, 150px);
    gap: 10px; /* Espaço entre as cartas */
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card {
    width: 150px;
    height: 150px;
    perspective: 1000px; /* Cria o contexto 3D para a rotação */
    cursor: pointer;
}

.card-inner {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d; /* ESSENCIAL: Garante que os filhos (faces) sejam renderizados em 3D */
    transition: transform 0.6s; /* Suaviza a transição da virada */
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Adiciona uma sombra para um visual melhor */
}

.card.flipped .card-inner {
    transform: rotateY(180deg); /* Gira o conteúdo da carta para mostrar a frente */
}

/* Aplicações comuns para ambas as faces */
.card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    /* ESSENCIAL: Esconde o lado da face que não está virado para o observador */
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #ddd;
    box-sizing: border-box;
    border-radius: 5px; /* Arredonda os cantos das faces */
    overflow: hidden; /* Garante que a imagem não saia dos limites */
}

.card-front {
    background-color: #eee; /* Cor de fundo da face da imagem */
    /* Este transform: rotateY(180deg) é o que faz a face da imagem começar "virada para trás". */
    /* Quando o .card-inner vira, ele "desfaz" essa rotação para o observador. */
    transform: rotateY(180deg);
    backface-visibility: hidden;

}

.face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    color: white;
}

.card-front img {
    max-width: 90%;
    max-height: 90%;
    object-fit: contain; /* Garante que a imagem se ajuste sem cortar ou distorcer */
    border-radius: 3px;
    backface-visibility: hidden;
    /* REMOVA QUALQUER 'transform' AQUI. A imagem não deve ter sua própria rotação. */
}

.card-back {
    background-color: #007bff; /* Cor do verso da carta */
    color: white;
    font-size: 2em;
    font-weight: bold;
    /* O verso da carta (card-back) é o lado padrão. */
    /* Certifique-se de que não há nenhum 'transform' aqui que possa virá-lo. */
    /* Se por acaso você tinha 'transform: rotateY(0deg);' ou algo similar, remova. */
}

.card-back::before {
    content: '?'; /* O caractere da interrogação */
}


.card.matched {
    opacity: 0.7;
}


.controls {
    margin-top: 20px;
    display: flex;
    gap: 20px;
    align-items: center;
}

.attempts {
    font-size: 1.1em;
    font-weight: bold;
}

#reset-button, #continue-button {
    padding: 10px 20px;
    font-size: 1em;
    background-color: #dc3545; /* Cor vermelha para o botão de reset */
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#reset-button:hover {
    background-color: #c82333;
}

#continue-button:disabled {
    opacity: 0.7;
    transition: none;
}
